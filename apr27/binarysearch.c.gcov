        -:    0:Source:binarysearch.c
        -:    0:Graph:binsearch-binarysearch.gcno
        -:    0:Data:-
        -:    0:Runs:0
        -:    1:#include "binarysearch.h"
        -:    2:
        -:    3:// Binary search function implementation
function binary_search called 0 returned 0% blocks executed 0%
    #####:    4:int binary_search(int arr[], int size, int target) {
    #####:    5:    int left = 0; // Initialize the left boundary of the search range
    #####:    6:    int right = size - 1; // Initialize the right boundary of the search range
        -:    7:
    #####:    8:    while (left <= right) { // Repeat until the search range is valid
branch  0 never executed
branch  1 never executed
    #####:    9:        int mid = left + (right - left) / 2; // Calculate the middle index
        -:   10:
    #####:   11:        if (arr[mid] == target) // If the middle element is the target
branch  0 never executed
branch  1 never executed
    #####:   12:            return mid; // Return the index of the target element
    #####:   13:        else if (arr[mid] < target) // If the target is in the right half
branch  0 never executed
branch  1 never executed
    #####:   14:            left = mid + 1; // Adjust the left boundary
        -:   15:        else // If the target is in the left half
    #####:   16:            right = mid - 1; // Adjust the right boundary
        -:   17:    }
        -:   18:
        -:   19:    // If target is not found
    #####:   20:    return -1; // Return -1 to indicate target not found
        -:   21:}
        -:   22:
        -:   23:
        -:   24:
